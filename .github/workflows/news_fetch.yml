# .github/workflows/news_fetch.yml ·ÄÄ·Ä≠·ÄØ ·Ä°·ÄÖ·Ä¨·Ä∏·Äë·Ä≠·ÄØ·Ä∏·Äõ·Äî·Ä∫

name: Fetch and Save News by Category

on:
  schedule:
    # üìå ·Äô·Äº·Äî·Ä∫·Äô·Ä¨·ÄÖ·Ä∂·Äê·Ä±·Ä¨·Ä∫·ÄÅ·Äª·Ä≠·Äî·Ä∫ (MMT - UTC+6:30) ·ÄÄ·Ä≠·ÄØ ·Ä°·ÄÅ·Äº·Ä±·ÄÅ·Ä∂·Äû·Ä±·Ä¨ ·ÅÖ ·ÄÄ·Äº·Ä≠·Äô·Ä∫
    - cron: "30 1 * * *"
    - cron: "30 5 * * *"
    - cron: "30 9 * * *"
    - cron: "30 13 * * *"
    - cron: "30 16 * * *"
  workflow_dispatch:

jobs:
  run-news-fetcher:
    runs-on: ubuntu-latest

    # üìå FIX 1: Log file ·ÄÄ·Ä≠·ÄØ Repository ·Äû·Ä≠·ÄØ·Ä∑ Commit ·Äú·ÄØ·Äï·Ä∫·Äõ·Äî·Ä∫·Ä°·Äê·ÄΩ·ÄÄ·Ä∫ Permission ·Äë·Ää·Ä∑·Ä∫·Äû·ÄΩ·ÄÑ·Ä∫·Ä∏·ÄÅ·Äº·ÄÑ·Ä∫·Ä∏
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests gspread

      - name: Determine Category and Run Script
        id: run_script_step
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
        run: |
          # ... (Category Determination Logic)
          CURRENT_HOUR=$(date -u +%H) 
          if [ "$CURRENT_HOUR" == "01" ]; then
            CATEGORY="General" 
          elif [ "$CURRENT_HOUR" == "05" ]; then
            CATEGORY="Technology" 
          elif [ "$CURRENT_HOUR" == "09" ]; then
            CATEGORY="World Politics" 
          elif [ "$CURRENT_HOUR" == "13" ]; then
            CATEGORY="Business and Finance" 
          elif [ "$CURRENT_HOUR" == "16" ]; then
            CATEGORY="Daily Summary" 
          else
            CATEGORY="General" 
          fi

          echo "CATEGORY=$CATEGORY" >> $GITHUB_OUTPUT 
          # Log file name ·Äê·ÄΩ·ÄÑ·Ä∫ Run ID ·ÄÄ·Ä≠·ÄØ ·Äû·ÄØ·Ä∂·Ä∏·ÄÅ·Äº·ÄÑ·Ä∫·Ä∏
          LOG_FILE="logs/run_${{ github.run_id }}_${CATEGORY}.log" 

          mkdir -p logs

          # Log file ·Äë·Ä≤·Äû·Ä≠·ÄØ·Ä∑ output ·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏·ÄÄ·Ä≠·ÄØ Redirect ·Äú·ÄØ·Äï·Ä∫·ÄÅ·Äº·ÄÑ·Ä∫·Ä∏
          echo "--- Workflow Run Start: $(date) ---" > $LOG_FILE
          echo "Running news fetcher for category: $CATEGORY" >> $LOG_FILE
          # Python Script Output (stdout ·Äî·Äæ·ÄÑ·Ä∑·Ä∫ stderr ·Äî·Äæ·ÄÖ·Ä∫·ÄÅ·ÄØ·Äú·ÄØ·Ä∂·Ä∏) ·ÄÄ·Ä≠·ÄØ Log ·Äë·Ä≤·Äû·Ä≠·ÄØ·Ä∑ ·Äë·Ää·Ä∑·Ä∫·ÄÅ·Äº·ÄÑ·Ä∫·Ä∏
          python news_fetcher.py "$CATEGORY" >> $LOG_FILE 2>&1
          echo "Workflow execution log saved to $LOG_FILE" >> $LOG_FILE

      - name: Commit and Push Log File
        # Run Failure ·Äñ·Äº·ÄÖ·Ä∫·ÄÅ·Ä≤·Ä∑·Äõ·ÄÑ·Ä∫·Äê·Ä±·Ä¨·ÄÑ·Ä∫ Log ·ÄÄ·Ä≠·ÄØ Commit ·Äú·ÄØ·Äï·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äõ·Äî·Ä∫
        if: always()
        run: |
          LOG_FILE="logs/run_${{ github.run_id }}_${{ steps.run_script_step.outputs.CATEGORY }}.log"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [ -f "$LOG_FILE" ]; then
            git add $LOG_FILE
            
            if git diff --cached --exit-code; then
              echo "No changes in $LOG_FILE to commit."
            else
              git commit -m "Workflow: Save log for run ${{ github.run_id }} (${{ steps.run_script_step.outputs.CATEGORY }})"
              echo "Pushing log file to repository..."
              # force-with-lease ·ÄÄ·Ä≠·ÄØ ·Äû·ÄØ·Ä∂·Ä∏·Åç push ·Äú·ÄØ·Äï·Ä∫·ÄÅ·Äº·ÄÑ·Ä∫·Ä∏
              git push 
            fi
          else
            echo "Log file $LOG_FILE not found, skipping commit."
          fi
